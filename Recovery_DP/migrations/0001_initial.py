# Generated by Django 5.1.2 on 2025-06-17 05:18

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('modelmasterapp', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Rec_Brass_QC_Rejection_Table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brass_rejection_reason', models.TextField(help_text='Reason for rejection')),
                ('brass_rejection_count', models.PositiveIntegerField(help_text='Count of rejected items')),
            ],
        ),
        migrations.CreateModel(
            name='Rec_IP_Rejection_Table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rejection_reason', models.TextField(help_text='Reason for rejection')),
                ('rejection_count', models.PositiveIntegerField(help_text='Count of rejected items')),
            ],
        ),
        migrations.CreateModel(
            name='Rec_IQF_Rejection_Table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iqf_rejection_reason', models.TextField(help_text='Reason for rejection')),
                ('iqf_rejection_count', models.PositiveIntegerField(help_text='Count of rejected items')),
            ],
        ),
        migrations.CreateModel(
            name='Rec_Brass_Qc_Accepted_TrayID_Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_id', models.CharField(blank=True, help_text='Lot ID', max_length=50, null=True)),
                ('tray_id', models.CharField(max_length=100, unique=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rec_Brass_Qc_Accepted_TrayScan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_id', models.CharField(blank=True, help_text='Lot ID', max_length=50, null=True)),
                ('brass_accepted_tray_quantity', models.CharField(help_text='Accepted Tray Quantity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rec_Brass_QC_Rejection_ReasonStore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_id', models.CharField(blank=True, help_text='Lot ID', max_length=50, null=True, unique=True)),
                ('brass_total_rejection_quantity', models.PositiveIntegerField(help_text='Total Rejection Quantity')),
                ('brass_batch_rejection', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Timestamp of the record')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('brass_rejection_reason', models.ManyToManyField(blank=True, to='Recovery_DP.rec_brass_qc_rejection_table')),
            ],
        ),
        migrations.CreateModel(
            name='Rec_IP_Accepted_TrayID_Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_id', models.CharField(blank=True, help_text='Lot ID', max_length=50, null=True)),
                ('tray_id', models.CharField(max_length=100, unique=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rec_IP_Accepted_TrayScan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_id', models.CharField(blank=True, help_text='Lot ID', max_length=50, null=True)),
                ('accepted_tray_quantity', models.CharField(help_text='Accepted Tray Quantity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rec_IP_Rejection_ReasonStore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_id', models.CharField(blank=True, help_text='Lot ID', max_length=50, null=True)),
                ('total_rejection_quantity', models.PositiveIntegerField(help_text='Total Rejection Quantity')),
                ('batch_rejection', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('rejection_reason', models.ManyToManyField(blank=True, to='Recovery_DP.rec_ip_rejection_table')),
            ],
        ),
        migrations.CreateModel(
            name='Rec_IP_Rejected_TrayScan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_id', models.CharField(blank=True, help_text='Lot ID', max_length=50, null=True)),
                ('rejected_tray_quantity', models.CharField(help_text='Rejected Tray Quantity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('rejection_reason', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Recovery_DP.rec_ip_rejection_table')),
            ],
        ),
        migrations.CreateModel(
            name='Rec_IQF_Accepted_TrayID_Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_id', models.CharField(blank=True, help_text='Lot ID', max_length=50, null=True)),
                ('tray_id', models.CharField(max_length=100, unique=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rec_IQF_Accepted_TrayScan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_id', models.CharField(blank=True, help_text='Lot ID', max_length=50, null=True)),
                ('iqf_accepted_tray_quantity', models.CharField(help_text='Accepted Tray Quantity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rec_IQF_Rejection_ReasonStore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_id', models.CharField(blank=True, help_text='Lot ID', max_length=50, null=True, unique=True)),
                ('iqf_total_rejection_quantity', models.PositiveIntegerField(help_text='Total Rejection Quantity')),
                ('iqf_batch_rejection', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('iqf_rejection_reason', models.ManyToManyField(blank=True, to='Recovery_DP.rec_iqf_rejection_table')),
            ],
        ),
        migrations.CreateModel(
            name='Rec_IQF_Rejected_TrayScan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_id', models.CharField(blank=True, help_text='Lot ID', max_length=50, null=True)),
                ('iqf_rejected_tray_quantity', models.CharField(help_text='Rejected Tray Quantity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('iqf_rejection_reason', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Recovery_DP.rec_iqf_rejection_table')),
            ],
        ),
        migrations.CreateModel(
            name='RecoveryMasterCreation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.CharField(max_length=50, unique=True)),
                ('lot_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('polish_finish', models.CharField(max_length=100)),
                ('ep_bath_type', models.CharField(max_length=100)),
                ('plating_color', models.CharField(blank=True, max_length=100, null=True)),
                ('tray_type', models.CharField(max_length=100)),
                ('tray_capacity', models.IntegerField(blank=True, null=True)),
                ('date_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('total_batch_quantity', models.IntegerField()),
                ('initial_batch_quantity', models.IntegerField(default=0)),
                ('current_batch_quantity', models.IntegerField(default=0)),
                ('no_of_trays', models.IntegerField(blank=True, null=True)),
                ('vendor_internal', models.CharField(max_length=100)),
                ('brand', models.CharField(max_length=100)),
                ('gender', models.CharField(max_length=50)),
                ('sequence_number', models.IntegerField(default=0)),
                ('recovery_tray_scan', models.BooleanField(default=False, help_text='Tray scan status')),
                ('Moved_to_R_Picker', models.BooleanField(default=False, help_text='Moved to D Picker')),
                ('R_Draft_Saved', models.BooleanField(default=False, help_text='Draft Save')),
                ('rec_pick_remarks', models.CharField(blank=True, max_length=100, null=True)),
                ('images', models.ManyToManyField(blank=True, to='modelmasterapp.modelimage')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='modelmasterapp.location')),
                ('model_stock_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recovery_master_creations', to='modelmasterapp.modelmaster')),
                ('version', models.ForeignKey(help_text='Version', on_delete=django.db.models.deletion.CASCADE, to='modelmasterapp.version')),
            ],
        ),
        migrations.CreateModel(
            name='Rec_DraftTrayId',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_id', models.CharField(blank=True, help_text='Lot ID', max_length=50, null=True)),
                ('tray_id', models.CharField(help_text='Tray ID', max_length=100, unique=True)),
                ('tray_quantity', models.IntegerField(blank=True, help_text='Quantity in the tray', null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('batch_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Recovery_DP.recoverymastercreation')),
            ],
        ),
        migrations.CreateModel(
            name='Rec_Brass_QC_Rejected_TrayScan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_id', models.CharField(blank=True, help_text='Lot ID', max_length=50, null=True)),
                ('brass_rejected_tray_quantity', models.CharField(help_text='Rejected Tray Quantity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('brass_rejection_reason', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Recovery_DP.rec_brass_qc_rejection_table')),
                ('batch_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Recovery_DP.recoverymastercreation')),
            ],
        ),
        migrations.CreateModel(
            name='RecoveryStockModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_stock', models.IntegerField(help_text='Total stock quantity')),
                ('lot_id', models.CharField(blank=True, help_text='Lot ID', max_length=50, null=True, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Timestamp of the record')),
                ('recovery_missing_qty', models.IntegerField(default=0, help_text='Missing quantity in day planning')),
                ('recovery_onboard_assigned_qty', models.IntegerField(default=0, help_text='Original assigned quantity')),
                ('last_process_date_time', models.DateTimeField(blank=True, help_text='Last Process Date/Time', null=True)),
                ('last_process_module', models.CharField(blank=True, help_text='Last Process Module', max_length=255, null=True)),
                ('next_process_module', models.CharField(blank=True, help_text='Next Process Module', max_length=255, null=True)),
                ('total_Rec_IP_accpeted_quantity', models.IntegerField(default=0, help_text='Total accepted quantity')),
                ('total_qty_after_rejection_IP', models.IntegerField(default=0, help_text='Total rejected quantity')),
                ('brass_qc_accepted_qty', models.IntegerField(default=0, help_text='Brass QC Accepted Quantity')),
                ('brass_qc_after_rejection_qty', models.IntegerField(default=0, help_text='Brass QC Rejected Quantity')),
                ('iqf_accept_qty_after_accept_ftn', models.IntegerField(default=0, help_text='IQF Accepted Quantity')),
                ('iqf_accepted_qty', models.IntegerField(default=0, help_text='IQF Accepted Quantity')),
                ('iqf_after_rejection_qty', models.IntegerField(default=0, help_text='IQF Rejected Quantity')),
                ('tray_scan_status', models.BooleanField(default=False, help_text='Tray scan status')),
                ('recovery_ip_person_qty_verified', models.BooleanField(default=False, help_text='IP Person Quantity Verified')),
                ('accepted_recovery_Ip_stock', models.BooleanField(default=False, help_text='Accepted IP Stock')),
                ('few_cases_accepted_Ip_stock', models.BooleanField(default=False, help_text='Few Accepted IP Stock')),
                ('rejected_ip_stock', models.BooleanField(default=False, help_text='Rejected IP Stock')),
                ('wiping_status', models.BooleanField(default=False, help_text='Wiping Status')),
                ('rejected_tray_scan_status', models.BooleanField(default=False)),
                ('accepted_tray_scan_status', models.BooleanField(default=False)),
                ('brass_qc_accptance', models.BooleanField(default=False)),
                ('brass_qc_few_cases_accptance', models.BooleanField(default=False)),
                ('brass_qc_rejection', models.BooleanField(default=False)),
                ('brass_rejection_tray_scan_status', models.BooleanField(default=False)),
                ('brass_accepted_tray_scan_status', models.BooleanField(default=False)),
                ('iqf_acceptance', models.BooleanField(default=False)),
                ('iqf_few_cases_acceptance', models.BooleanField(default=False)),
                ('iqf_rejection', models.BooleanField(default=False)),
                ('iqf_rejection_tray_scan_status', models.BooleanField(default=False)),
                ('iqf_accepted_tray_scan_status', models.BooleanField(default=False)),
                ('send_brass_qc', models.BooleanField(default=False, help_text='Send to Brass QC')),
                ('batch_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Recovery_DP.recoverymastercreation')),
                ('location', models.ManyToManyField(blank=True, help_text='Multiple Locations', to='modelmasterapp.location')),
                ('model_stock_no', models.ForeignKey(help_text='Model Stock Number', on_delete=django.db.models.deletion.CASCADE, to='modelmasterapp.modelmaster')),
                ('plating_color', models.ForeignKey(blank=True, help_text='Plating Color', null=True, on_delete=django.db.models.deletion.SET_NULL, to='modelmasterapp.plating_color')),
                ('polish_finish', models.ForeignKey(blank=True, help_text='Polish Finish', null=True, on_delete=django.db.models.deletion.SET_NULL, to='modelmasterapp.polishfinishtype')),
                ('version', models.ForeignKey(help_text='Version', on_delete=django.db.models.deletion.CASCADE, to='modelmasterapp.version')),
            ],
        ),
        migrations.CreateModel(
            name='RecoveryTrayId',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_id', models.CharField(blank=True, help_text='Lot ID', max_length=50, null=True)),
                ('tray_id', models.CharField(help_text='Tray ID', max_length=100, unique=True)),
                ('tray_quantity', models.IntegerField(blank=True, help_text='Quantity in the tray', null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('batch_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Recovery_DP.recoverymastercreation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
